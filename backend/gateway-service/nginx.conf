events {
    worker_connections 1024;
}

http {
    upstream user_service {
        server user-service:8081;  # Replace with 'localhost' if necessary
    }

    upstream book_service {
        server book-service:8082;  # Replace with 'localhost' if necessary
    }

    server {
        listen 8085;

        # Global CORS headers
        add_header 'Access-Control-Allow-Origin' 'http://localhost:8005' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With' always;

        # Handle preflight OPTIONS requests globally
        if ($request_method = OPTIONS) {
            return 204;
        }

        # Proxy user-service
        location /api/auth {
            proxy_pass http://user_service;  # Include trailing slash if backend expects paths without /api/auth
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host localhost;  # Set a valid Host header
            proxy_cache_bypass $cookie_nocache $arg_nocache;
        }

        # Proxy user-service for /api/users/ requests
        location /api/users {
            proxy_pass http://user_service;  # Include trailing slash if necessary
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host localhost;  # Set a valid Host header
            proxy_cache_bypass $cookie_nocache $arg_nocache;
        }

        # Proxy book-service
        location /api/books {
            # Handle preflight OPTIONS requests
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' 'http://localhost:8005' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With' always;
                add_header 'Access-Control-Max-Age' 1728000;
                return 204;
            }

            proxy_pass http://book_service;  # Include trailing slash if necessary
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host localhost;  # Set a valid Host header
            proxy_cache_bypass $cookie_nocache $arg_nocache;
        }

        # Optional: Custom error page
        error_page 502 = /502.html;
    }
}
